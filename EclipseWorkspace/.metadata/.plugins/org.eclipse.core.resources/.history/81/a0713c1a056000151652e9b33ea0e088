package artGame.ui.renderer;

import static org.lwjgl.opengl.GL20.GL_VERTEX_SHADER;
import static org.lwjgl.opengl.GL20.GL_FRAGMENT_SHADER;

public class Material {
	private Shader vert;
	private Shader frag;
	private ShaderProgram program;
	
	private int modelUniform;
	private int viewUniform;
	private int projUniform;

	private final CharSequence vertSource = "#version 150 core\n" + "\n"
			+ "in vec3 position;\n" + "in vec3 color;\n" + "\n"
			+ "out vec3 vertexColor;\n" + "\n" + "uniform mat4 model;\n"
			+ "uniform mat4 view;\n" + "uniform mat4 projection;\n" + "\n"
			+ "void main() {\n" + "    vertexColor = color;\n"
			+ "    mat4 mvp = projection * view * model;\n"
			+ "    gl_Position = mvp * vec4(position, 1.0);\n" + "}";
	private final CharSequence fragSource = "#version 150 core\n" + "\n"
			+ "in vec3 vertexColor;\n" + "\n" + "out vec4 fragColor;\n" + "\n"
			+ "void main() {\n" + "    fragColor = vec4(vertexColor, 1.0);\n"
			+ "}";

	public Material() {
		vert = new Shader(GL_VERTEX_SHADER, vertSource);
        frag = new Shader(GL_FRAGMENT_SHADER, fragSource);

        program = new ShaderProgram();
        program.attachShader(vert);
        program.attachShader(frag);
        program.bindFragmentDataLocation(0, "fragColor");
        program.link();
        program.use();
        
        int posAttrib = program.getAttributeLocation("position");
        program.enableVertexAttribute(posAttrib);
        program.setVertexAttributePointer(posAttrib, 3, 6 * Float.BYTES, 0);

        int colorAttrib = program.getAttributeLocation("color");
        program.enableVertexAttribute(colorAttrib);
        program.setVertexAttributePointer(colorAttrib, 3, 6 * Float.BYTES, 3 * Float.BYTES);
	}
}
